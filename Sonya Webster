# Question 1

import pandas as pd

import plotly.express as px

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/DATA/olympic_medals.csv')

df.columns

df_filtered = df[df['Year']>= 2000]

medal_counts = df_filtered.groupby('Gender')['Medal'].count()

medal_counts = df_filtered.groupby(['Gender', 'Medal']).size().reset_index(name='Count')

medal_counts['Proportion'] = medal_counts.groupby('Gender')['Count'].transform(lambda x: x / x.sum())

fig = px.parallel_categories(
    medal_counts,
    dimensions=['Gender', 'Medal'],
    color='Proportion',  # Use the calculated proportion for coloring
    color_continuous_scale='Blues',  # Color scale for proportion
    labels={'Proportion': 'Proportion of Medals'},
    title='Proportion of Medal Types by Gender (since 2000)'
)

fig.show()

# Question 3 A - E

install.packages("ggplot2")
library(ggplot2)
cars93 <- MASS::Cars93
ggplot(cars93, aes(x = Price, y = Fuel.tank.capacity)) +
  geom_point(color = "grey60") +
  geom_smooth(se = FALSE, method = "loess", formula = y ~ x, color = "#0072B2") +
  scale_x_continuous(
    name = "price (USD)",
    breaks = c(20, 40, 60),
    labels = c("$20,000", "$40,000", "$60,000")
  ) +
  scale_y_continuous(name = "fuel-tank capacity\n(US gallons)")

ggplot(cars93, aes(x = Price, y = Fuel.tank.capacity)) +
  geom_point(color = "grey60") +
  geom_smooth(se = TRUE, method = "lm", formula = y ~ x, color = "#8fe388") +
  scale_x_continuous(
    name = "price (USD)",
    breaks = c(20, 40, 60),
    labels = c("$20,000", "$40,000", "$60,000")
  ) +
  scale_y_continuous(name = "fuel-tank capacity\n(US gallons)")+
  labs(
    title = "Linear Model Smoothing: Price vs. Fuel Tank Capacity",
  )+
  theme(
    plot.title = element_text(size = 14, color = "#8fe388")
  )


ggplot(cars93, aes(x = Price, y = Fuel.tank.capacity)) +
  geom_point(color = "grey60") +
  geom_smooth(se = TRUE, method = "glm", formula = y ~ x, color = "#fe8d6d") +
  scale_x_continuous(
    name = "price (USD)",
    breaks = c(20, 40, 60),
    labels = c("$20,000", "$40,000", "$60,000")
  ) +
  scale_y_continuous(name = "fuel-tank capacity\n(US gallons)")+
  labs(
    title = "Generalized Linear Model Smoothing: Price vs. Fuel Tank Capacity",
  )+
  theme(
    plot.title = element_text(size = 14, color = "#fe8d6d")
  )


ggplot(cars93, aes(x = Price, y = Fuel.tank.capacity)) +
  geom_point(color = "grey60") +
  geom_smooth(se = TRUE, method = "gam", formula = y ~ x, color = "#7c6bea") +
  scale_x_continuous(
    name = "price (USD)",
    breaks = c(20, 40, 60),
    labels = c("$20,000", "$40,000", "$60,000")
  ) +
  scale_y_continuous(name = "fuel-tank capacity\n(US gallons)")+
  labs(
    title = "Generalized Additive Model Smoothing: Price vs. Fuel Tank Capacity",
  )+
  theme(
    plot.title = element_text(size = 14, color = "#7c6bea")
  )

# Question 4

# Original Code

library(ggplot2)
install.packages("tidyverse")
library(tidyverse)
install.packages("dplyr")
library(dplyr)
library(lubridate)

head(preprint_growth)

preprint_growth %>% 
  filter(archive == "bioRxiv") %>%
  filter(count > 0) -> biorxiv_growth

preprints <- preprint_growth %>% 
  filter(archive %in%c("bioRxiv", "arXiv q-bio", "PeerJ Preprints")) %>%
  filter(count > 0) %>%
  mutate(archive = factor(archive, levels = c("bioRxiv", "arXiv q-bio", "PeerJ Preprints")))

preprints_final <- filter(preprints, date == ymd("2017-01-01"))

ggplot(preprints) +
  aes(date, count, color = archive, fill = archive) +
  geom_line(size = 1) +
  scale_y_continuous(
    limits = c(0, 600), expand = c(0, 0),
    name = "preprints / month",
    sec.axis = dup_axis( #this part is for the second y axis
      breaks = preprints_final$count, #and we use the counts to position our labels
      labels = c("arXivq-bio", "PeerJPreprints", "bioRxiv"),
      name = NULL)
  ) +
  scale_x_date(name = "year",
               limits = c(min(biorxiv_growth$date), ymd("2017-01-01"))) +
  scale_color_manual(values = c("#0072b2", "#D55E00", "#009e73"),
                     name = NULL) +
  theme(legend.position = "none")


#my changes

preprint_growth %>% filter(archive == "bioRxiv") %>%
  filter(count > 0) -> biorxiv_growth

preprints <- preprint_growth %>% 
  filter(archive %in%c("bioRxiv", "arXiv q-bio", "PeerJ Preprints")) %>%
  filter(count > 0) %>%
  mutate(archive = factor(archive, levels = c("bioRxiv", "arXiv q-bio", "PeerJ Preprints")))

preprints_final <- filter(preprints, date == ymd("2015-01-01")) #changed the date to 1/1/2015

ggplot(preprints) +
  aes(date, count, color = archive, fill = archive) +
  geom_line(size = 1) +
  scale_y_continuous(
    limits = c(0, 600), expand = c(0, 0),
    name = "preprints / month",
    sec.axis = dup_axis( #this part is for the second y axis
      breaks = preprints_final$count, #and we use the counts to position our labels
      labels = c("arXivq-bio", "PeerJPreprints", "bioRxiv"),
      name = NULL)
  ) +
  scale_x_date(name = "year",
               limits = c(min(biorxiv_growth$date), ymd("2015-01-01"))) +  #changed the date to 1/1/2015
  scale_color_manual(values = c("#9b59b6", "#e74c3c", "#f39c12"), #changed the colors to purple, red, yellow
                     name = NULL) +
  theme(legend.position = "none")
